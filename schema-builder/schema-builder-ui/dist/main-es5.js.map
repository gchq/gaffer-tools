{"version":3,"sources":["webpack:///src/app/graph/entity-form/entity-form.component.html","webpack:///src/app/graph/edge-form/edge-form.component.html","webpack:///src/app/services/gaffer.service.ts","webpack:///src/app/properties/properties.component.html","webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/graph/entity-form/entity-form.component.css","webpack:///src/app/graph/graph.component.css","webpack:///src/app/types/type-form/type-form.component.css","webpack:///src/app/schema/schema.routes.ts","webpack:///src/app/graph/edge-form/edge-form.component.ts","webpack:///src/app/schema/schema.component.css","webpack:///src/app/types/types.component.html","webpack:///src/app/app.routes.ts","webpack:///src/app/app.component.ts","webpack:///src/app/properties/properties.component.ts","webpack:///src/app/properties/property-form/property-form.component.html","webpack:///src/app/types/types.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/types/type-form/type-form.component.html","webpack:///src/app/types/types.component.css","webpack:///src/app/graph/graph.routes.ts","webpack:///src/app/graph/edge-form/edge-form.component.css","webpack:///src/app/app.module.ts","webpack:///src/app/properties/property-form/property-form.component.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/graph/entity-form/entity-form.component.ts","webpack:///src/app/schema/schema.component.html","webpack:///src/app/types/type-form/type-form.component.ts","webpack:///src/app/graph/graph.component.ts","webpack:///src/app/properties/properties.component.css","webpack:///src/app/properties/property-form/property-form.component.css","webpack:///src/app/graph/node-form/node-form.component.css","webpack:///src/app/types/types.routes.ts","webpack:///src/app/graph/node-form/node-form.component.ts","webpack:///src/app/properties/properties.routes.ts","webpack:///src/app/graph/node-form/node-form.component.html","webpack:///src/app/graph/graph.component.html","webpack:///src/main.ts","webpack:///src/app/schema/schema.component.ts"],"names":["GafferService","http","config","GAFFER_HOST","getSettings","res","body","error","errMsg","err","JSON","stringify","status","statusText","message","toString","console","gafferUrl","headers","options","get","typeName","typeClass","params","post","elements","types","url","environment","production","schemaRoutes","path","component","EdgeFormComponent","storage","formBuilder","_storedTypes","retrieve","form","valueChanges","debounceTime","distinctUntilChanged","subscribe","data","save","edge","group","from","to","label","arrows","value","key","_edge","_edges","update","store","edges","nodes","_nodes","nodeOptions","selectedEdge","updateForm","network","_network","selector","template","providers","routes","redirectTo","pathMatch","routing","forRoot","AppComponent","router","route","pages","title","rlaSafe","index","linkIsActivated","activeLinkIndex","log","NavLinkComponent","name","_tabName","PropertiesComponent","storedEdges","_data","id","push","storedNodes","node","event","properties","editing","entities","entity","TypesComponent","gafferService","storedTypes","getNodes","resetTypes","nodeTypes","type","validateFunctions","aggregateFunction","length","getCommonTypes","commonTypes","formatTypes","errorMessage","splice","serialiser","graphRoutes","AppModule","declarations","imports","provide","useFactory","entryComponents","bootstrap","PropertyFormComponent","holderChange","uuid","UUID","_propertyHolder","propertyId","property","emit","propertyHolder","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","EntityFormComponent","formObject","_value","entityId","_node","selectedNode","TypeFormComponent","typeChange","javaClass","undefined","getSimpleFunctions","functions","_type","checked","validator","validationFields","changeType","i","secondaryKey","aggregateFields","fieldsObject","parse","aggregateFieldsValid","validateFieldsValid","getGafferFunctions","aggregateFieldsDisabled","result","forEach","v","tempValidationFields","field","vFields","GraphComponent","callback","nodeArray","storedNode","edgeArray","storedEdge","container","document","getElementById","shape","size","font","borderWidth","shadow","width","autoResize","height","manipulation","enabled","initiallyActive","addNode","saveNodes","addEdge","saveEdges","editEdge","deleteNode","deleteEdge","controlNodeStyle","on","selectNode","selectEdge","deselectNode","deselectEdge","typesRoutes","NodeFormComponent","propertiesRoutes","bootstrapModule","SchemaComponent","sanitizer","schema","hasOwnProperty","directed","formattedEdge","source","nodesById","destination","formattedEntity","vertex","elementsDownload","encodeURIComponent","formattedType","Object","formattedNode","typesDownload","bypassSecurityTrustUrl","clear","ngOnInit","trigger","input","editedText","val","errors","newNodes","newEdges","editedEdge","edgeName","fromId","toId","props","editedEntity","entityName","nodeId","newNode","add","newTypes","editedType","found","storedId","successURL","getSchemaFromURL","schemaUrl","formatSchemaResult","errorMessageURL","navigate","updateElements","updateTypes","routeParams","storedSchemaUrl","setupNodeLookups","each","setAttribute","scrollHeight","setTimeout","style","parseElements","parseTypes","validation","validateSchema"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n<div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n    <div fxFlex></div>\\n    <button md-raised-button color=\\\"accent\\\" mdTooltip=\\\"add new entity\\\" aria-label=\\\"add new entity\\\" (click)=\\\"addNewEntity();\\\"\\n        class=\\\"button-spacing\\\">\\n        Add Entity\\n        </button>\\n</div>\\n<div style=\\\"margin: 10px 0 0 0;\\\">\\n    <form [formGroup]=\\\"form\\\" novalidate>\\n        <div *ngFor=\\\"let entity of entities\\\" id=\\\"{{entity.id}}\\\" style=\\\"margin: 10px 0; padding: 10px;\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n                    <h4 style=\\\"margin-left: 10px; font-size: 18pt; word-break: break-all;\\\" fxFlex>{{entity.name}}</h4>\\n                    <button mat-icon-button color=\\\"warn\\\" mdTooltip=\\\"delete entity\\\" aria-label=\\\"delete entity\\\" (click)=\\\"removeEntity(entity.id)\\\"\\n                        class=\\\"button-spacing\\\" style=\\\"margin-top: 10px;\\\">\\n                        <mat-icon>delete</mat-icon>\\n                        </button>\\n                </div>\\n                <div class=\\\"input-field\\\">\\n                    <input mdInput name=\\\"name\\\" class=\\\"full-width\\\" placeholder=\\\"Entity name\\\" formControlName=\\\"{{entity.id}}\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\";","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n<form [formGroup]=\\\"form\\\" style=\\\"padding-top: 10px;\\\">\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"input-field\\\">\\n            <md-select id=\\\"source\\\" placeholder=\\\"Source\\\" formControlName=\\\"from\\\" [(ngModel)]=\\\"_edge.from\\\" class=\\\"full-width\\\">\\n                <md-option *ngFor=\\\"let node of nodeOptions\\\" [value]=\\\"node.id\\\">\\n                    {{ node.label }}\\n                </md-option>\\n            </md-select>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <md-select id=\\\"destination\\\" placeholder=\\\"Destination\\\" formControlName=\\\"to\\\" [(ngModel)]=\\\"_edge.to\\\" class=\\\"full-width\\\">\\n                <md-option *ngFor=\\\"let node of nodeOptions\\\" [value]=\\\"node.id\\\">\\n                    {{ node.label }}\\n                </md-option>\\n            </md-select>\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input mdInput placeholder=\\\"Edge name\\\" formControlName=\\\"label\\\" [(ngModel)]=\\\"_edge.label\\\">\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <md-select id=\\\"directed\\\" placeholder=\\\"Directed\\\" formControlName=\\\"arrows\\\" [(ngModel)]=\\\"_edge.arrows\\\" class=\\\"full-width\\\">\\n                <md-option value=\\\"to\\\">\\n                    True\\n                </md-option>\\n                <md-option value=\\\"none\\\">\\n                    False\\n                </md-option>\\n            </md-select>\\n        </div>\\n    </div>\\n</form>\\n\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ConfigService } from '@ngx-config/core';\n\n@Injectable()\nexport class GafferService {\n\n  GAFFER_HOST: string = this.config.getSettings('system', 'gafferUrl');\n\n  constructor(private http: HttpClient, private config: ConfigService) { }\n\n  private extractData(res: HttpResponse<any>) {\n    const body = res.body;\n    return body || { };\n  }\n\n  private handleError (error: HttpErrorResponse | any) {\n    let errMsg: string;\n    if (error instanceof HttpErrorResponse) {\n      const body = error.error || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n\n  getCommonTypes(): Observable<any> {\n    const gafferUrl = this.GAFFER_HOST + '/schema-builder-rest/v1/commonSchema';\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const options = { headers: headers };\n    return this.http.get(gafferUrl, options);\n  }\n\n  getSimpleFunctions(typeName: string, typeClass: string): Observable<any> {\n    const gafferUrl = this.GAFFER_HOST + '/schema-builder-rest/v1/functions';\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const params = {\n      typeName: typeName,\n      typeClass: typeClass\n    };\n    const options = { headers: headers, params: params };\n    return this.http.post(gafferUrl, options);\n  }\n\n  validateSchema(elements: any, types: any): Observable<any> {\n    const gafferUrl = this.GAFFER_HOST + '/schema-builder-rest/v1/validate';\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const params = [elements, types];\n    const options = { headers: headers, params: params};\n    return this.http.post(gafferUrl, options);\n  }\n\n  getSchemaFromURL(url) {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const options = { headers: headers };\n    return this.http.get(url, options);\n  }\n}\n","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n  \\n  <div style=\\\"padding: 15px;\\\" class=\\\"flex-container alt-background\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n    <div fxFlex>\\n        <h4 style=\\\"font-size: 16pt;\\\">Edges</h4>\\n        <mat-card *ngIf=\\\"!edges || edges.length === 0\\\">\\n            <mat-card-content>\\n                <div>\\n                    <md-list dense>\\n                        <md-list-item>\\n                            <h3 md-line><b>No edges</b></h3>\\n                        </md-list-item>\\n                    </md-list>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n            <div fxFlex=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" fxFlex.xs=\\\"100%\\\" style=\\\"padding: 10px;\\\" *ngFor=\\\"let edge of edges\\\">\\n                <mat-card>\\n                    <div class=\\\"content-card-header\\\" fxLayout=\\\"row\\\">\\n                        <mat-card-title fxFlex style=\\\"word-break: break-all;\\\">{{edge.label}}</mat-card-title>\\n                        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"edge.editing = true;\\\" mdTooltip=\\\"edit edge properties\\\" aria-label=\\\"edit edge properties\\\" *ngIf=\\\"!edge.editing\\\" class=\\\"button-spacing\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                    </div>\\n                    <mat-card-content *ngIf=\\\"!edge.editing\\\">\\n                        <div *ngIf=\\\"!edge.properties || edge.properties.length === 0\\\">\\n                            <md-list dense>\\n                                <md-list-item>\\n                                    <h3 md-line><b>No properties</b></h3>\\n                                </md-list-item>\\n                            </md-list>\\n                        </div>\\n                        <div *ngIf=\\\"edge.properties && edge.properties.length > 0\\\">\\n                            <md-list dense>\\n                                <md-list-item *ngFor=\\\"let property of edge.properties\\\">\\n                                    <h3 md-line><b>{{property.name}}</b></h3>\\n                                    <p md-line>{{property.type}}</p>\\n                                </md-list-item>\\n                            </md-list>\\n                        </div>\\n                    </mat-card-content>\\n                    <mat-card-content *ngIf=\\\"edge.editing\\\" style=\\\"overflow: visible;\\\">\\n                        <app-property-form [propertyHolder]=\\\"edge\\\" (holderChange)=\\\"edgePropertiesChanged($event)\\\"></app-property-form>\\n                    </mat-card-content>\\n                </mat-card>\\n            </div>\\n        </div>\\n        <h4 style=\\\"font-size: 16pt;\\\">Entities</h4>\\n        <mat-card *ngIf=\\\"!nodes || nodes.length === 0\\\">\\n            <mat-card-content>\\n                <div>\\n                    <md-list dense>\\n                        <md-list-item>\\n                            <h3 md-line><b>No entities</b></h3>\\n                        </md-list-item>\\n                    </md-list>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n        <div *ngFor=\\\"let node of nodes\\\">\\n            <h3 style=\\\"font-size: 12pt;\\\" *ngIf=\\\"node.entities && node.entities.length > 0\\\"><b>{{node.label}}</b></h3>\\n            <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n                <div fxFlex=\\\"50%\\\" fxFlex.gt-md=\\\"33%\\\" fxFlex.xs=\\\"100%\\\" style=\\\"padding: 10px;\\\" *ngFor=\\\"let entity of node.entities\\\">\\n                    <mat-card>\\n                        <div class=\\\"content-card-header\\\" fxLayout=\\\"row\\\">\\n                            <mat-card-title fxFlex style=\\\"word-break: break-all;\\\">{{entity.name}}</mat-card-title>\\n                            <button mat-icon-button color=\\\"accent\\\" (click)=\\\"entity.editing = true;\\\" mdTooltip=\\\"edit entity properties\\\" aria-label=\\\"edit entity properties\\\" *ngIf=\\\"!entity.editing\\\" class=\\\"button-spacing\\\">\\n                                <mat-icon>edit</mat-icon>\\n                            </button>\\n                        </div>\\n                        <mat-card-content *ngIf=\\\"!entity.editing\\\">\\n                            <div *ngIf=\\\"!entity.properties || entity.properties.length === 0\\\">\\n                                <md-list dense>\\n                                    <md-list-item>\\n                                        <h3 md-line><b>No properties</b></h3>\\n                                    </md-list-item>\\n                                </md-list>\\n                            </div>\\n                            <div *ngIf=\\\"entity.properties && entity.properties.length > 0\\\">\\n                                <md-list dense>\\n                                    <md-list-item *ngFor=\\\"let property of entity.properties\\\">\\n                                        <h3 md-line><b>{{property.name}}</b></h3>\\n                                        <p md-line>{{property.type}}</p>\\n                                    </md-list-item>\\n                                </md-list>\\n                            </div>\\n                        </mat-card-content>\\n                        <mat-card-content *ngIf=\\\"entity.editing\\\" style=\\\"overflow: visible;\\\">\\n                            <app-property-form [propertyHolder]=\\\"entity\\\" (holderChange)=\\\"entityPropertiesChanged($event)\\\"></app-property-form>\\n                        </mat-card-content>\\n                    </mat-card>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n</div>\\n\";","export default \"mat-card-title {\\n  margin-bottom: 0 !important;\\n  color: white;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQTJCO0VBQzNCLFlBQVk7QUFDZCIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkLXRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbiJdfQ== */\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The file for the current environment will overwrite this one during build.\n// Different environments can be found in ./environment.{dev|prod}.ts, and\n// you can create your own and use it with the --env flag.\n// The build system defaults to the dev environment.\n\nexport const environment = {\n  production: false\n};\n","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.input-field {\\n    margin-right: 30px;\\n}\\n\\n.form-button {\\n    margin: 20px;\\n    height: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0eS1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0VBY0U7O0FBRUY7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7QUFDaEIiLCJmaWxlIjoiZW50aXR5LWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNiBDcm93biBDb3B5cmlnaHRcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLmZvcm0tcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi5pbnB1dC1maWVsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xufVxuXG4uZm9ybS1idXR0b24ge1xuICAgIG1hcmdpbjogMjBweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG59Il19 */\";","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\ndiv.vis-network div.vis-manipulation {\\n  background: transparent !important;\\n  height: 35px !important;\\n  padding-top: 0 !important;\\n  border: 0 !important;\\n  margin: 10px 0;\\n  top: -55px !important;\\n}\\n\\ndiv.vis-network div.vis-edit-mode {\\n  padding-top: 0 !important;\\n  border: 0 !important;\\n  margin: 10px 0;\\n  top: -27px !important;\\n}\\n\\ndiv.vis-network div.vis-close {\\n  display: none !important;\\n}\\n\\n.vis-separator-line {\\n  background: transparent !important;\\n}\\n\\n.vis-button {\\n  border-radius: 3px !important;\\n  padding: 5px 15px !important;\\n  height: 25px !important;\\n  background-position: 8px 5px !important;\\n}\\n\\n.vis-network {\\n  margin-top: 70px;\\n  overflow: visible !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyYXBoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0VBY0U7O0FBRUY7RUFDRSxrQ0FBa0M7RUFDbEMsdUJBQXVCO0VBQ3ZCLHlCQUF5QjtFQUN6QixvQkFBb0I7RUFDcEIsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixvQkFBb0I7RUFDcEIsY0FBYztFQUNkLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3Qiw0QkFBNEI7RUFDNUIsdUJBQXVCO0VBQ3ZCLHVDQUF1QztBQUN6Qzs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEI7QUFDOUIiLCJmaWxlIjoiZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNiBDcm93biBDb3B5cmlnaHRcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZGl2LnZpcy1uZXR3b3JrIGRpdi52aXMtbWFuaXB1bGF0aW9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAzNXB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMCAhaW1wb3J0YW50O1xuICBtYXJnaW46IDEwcHggMDtcbiAgdG9wOiAtNTVweCAhaW1wb3J0YW50O1xufVxuXG5kaXYudmlzLW5ldHdvcmsgZGl2LnZpcy1lZGl0LW1vZGUge1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgbWFyZ2luOiAxMHB4IDA7XG4gIHRvcDogLTI3cHggIWltcG9ydGFudDtcbn1cblxuZGl2LnZpcy1uZXR3b3JrIGRpdi52aXMtY2xvc2Uge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi52aXMtc2VwYXJhdG9yLWxpbmUge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xufVxuXG4udmlzLWJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDNweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiA1cHggMTVweCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDI1cHggIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogOHB4IDVweCAhaW1wb3J0YW50O1xufVxuXG4udmlzLW5ldHdvcmsge1xuICBtYXJnaW4tdG9wOiA3MHB4O1xuICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50O1xufSJdfQ== */\";","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.input-field {\\n    margin-right: 30px;\\n}\\n\\n.form-button {\\n    margin: 20px;\\n    height: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGUtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztFQWNFOztBQUVGO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCIiwiZmlsZSI6InR5cGUtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE2IENyb3duIENvcHlyaWdodFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4uZm9ybS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuLmlucHV0LWZpZWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG59XG5cbi5mb3JtLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIGhlaWdodDogMzVweDtcbn0iXX0= */\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Routes } from '@angular/router';\n\nimport { SchemaComponent } from './schema.component';\n\nexport const schemaRoutes: Routes = [\n  { path: 'schema', component: SchemaComponent }\n];\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { DataSet, Network } from 'vis';\nimport { GraphQLNode } from '../../shared/graphql-node.interface';\nimport { GraphQLEdge } from '../../shared/graphql-edge.interface';\nimport { GraphQLType } from '../../shared/graphql-type.interface';\nimport { FormBuilder } from '@angular/forms';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'app-edge-form',\n    templateUrl: './edge-form.component.html',\n    styleUrls: ['./edge-form.component.css'],\n    providers: [FormBuilder]\n})\nexport class EdgeFormComponent implements OnInit {\n    _edge: GraphQLEdge;\n    _edges: DataSet<GraphQLEdge>;\n    _nodes: DataSet<GraphQLNode>;\n    _network: Network;\n    _storedTypes: Array<GraphQLType>;\n    nodeOptions: any;\n    form: any;\n\n    @Input()\n    set edges(edges: any) {\n        this._edges = edges;\n    }\n    get edges() { return this._edges; }\n\n    @Input()\n    set nodes(nodes: any) {\n        this._nodes = nodes;\n        this.nodeOptions = nodes.get();\n    }\n    get nodes() { return this._nodes; }\n\n    @Input()\n    set selectedEdge(selectedEdge: string) {\n        this._edge = this._edges.get(selectedEdge);\n        this.updateForm(this._edge);\n    }\n\n    @Input()\n    set network(network: any) {\n        this._network = network;\n    }\n\n    constructor(private storage: LocalStorageService, private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n        this._storedTypes = this.storage.retrieve('types');\n        this.form.valueChanges\n            .debounceTime(400)\n            .distinctUntilChanged()\n            .subscribe((data) => this.save(data));\n    }\n\n    updateForm(edge: any) {\n        this.form = this.formBuilder.group({\n            from: edge.from,\n            to: edge.to,\n            label: edge.label,\n            arrows: edge.arrows\n        });\n    }\n\n    changeEdge(value: any, key: any) {\n        this._edge[key] = value;\n    }\n\n    save(data) {\n        this._edge = _.merge(this._edge, data);\n        this._edges.update(this._edge);\n        this.storage.store('graphEdges', this._edges);\n    }\n}\n","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.type-edit-button {\\n    position: absolute;\\n    top: 20px;\\n    right: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztFQWNFOztBQUVGO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxXQUFXO0FBQ2YiLCJmaWxlIjoic2NoZW1hLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTYgQ3Jvd24gQ29weXJpZ2h0XG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi50eXBlLWVkaXQtYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIHJpZ2h0OiAyMHB4O1xufSJdfQ== */\";","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n  <div style=\\\"padding: 15px;\\\" class=\\\"flex-container alt-background\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n    <div fxFlex>\\n        <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n            <div fxFlex></div>\\n            <button md-raised-button color=\\\"accent\\\" (click)=\\\"addNewType();\\\" mdTooltip=\\\"add new type\\\" aria-label=\\\"add new type\\\" class=\\\"button-spacing\\\">\\n                Add type\\n            </button>\\n            <button md-raised-button color=\\\"warn\\\" (click)=\\\"resetTypes();\\\" mdTooltip=\\\"reset to default types\\\" aria-label=\\\"reset to default types\\\" class=\\\"button-spacing\\\">\\n                Reset\\n            </button>\\n        </div>\\n        <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n            <div fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"50%\\\" style=\\\"padding: 10px;\\\" *ngFor=\\\"let type of types; let i = index\\\">\\n                <mat-card>\\n                    <div class=\\\"content-card-header\\\" fxLayout=\\\"row\\\">\\n                        <mat-card-title fxFlex style=\\\"word-break: break-all;\\\">{{type.type}}</mat-card-title>\\n                        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"type.editing = true;\\\" mdTooltip=\\\"edit type\\\" aria-label=\\\"edit type\\\" *ngIf=\\\"!type.editing\\\" class=\\\"button-spacing\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"removeType(i)\\\" mdTooltip=\\\"delete type\\\" aria-label=\\\"delete type\\\" class=\\\"button-spacing\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                    </div>\\n                    <mat-card-content>\\n                        <div *ngIf=\\\"!type.editing\\\">\\n                            <md-list dense>\\n                                <md-list-item>\\n                                    <h3 md-line><b>Class</b></h3>\\n                                    <p md-line>{{type.class}}</p>\\n                                </md-list-item>\\n                                <md-list-item>\\n                                    <h3 md-line><b>Serialiser</b></h3>\\n                                    <p md-line *ngIf=\\\"type.serialiser && type.serialiser.class\\\">{{type.serialiser.class}}</p>\\n                                    <p md-line *ngIf=\\\"!type.serialiser || !type.serialiser.class\\\">null</p>\\n                                </md-list-item>\\n                                <md-list-item>\\n                                    <h3 md-line><b>Aggregator</b></h3>\\n                                    <p md-line *ngIf=\\\"type.aggregateFunction && type.aggregateFunction.class\\\">{{type.aggregateFunction.class}}</p>\\n                                    <p md-line *ngIf=\\\"!type.aggregateFunction || !type.aggregateFunction.class\\\">null</p>\\n                                </md-list-item>\\n                                <md-list-item class=\\\"autoheight-list\\\">\\n                                    <h3 md-line><b>Validators</b></h3>\\n                                    <p md-line *ngFor=\\\"let validator of type.validateFunctions\\\">{{validator.class}}</p>\\n                                    <p md-line *ngIf=\\\"!type.validateFunctions || type.validateFunctions.length === 0\\\">null</p>\\n                                </md-list-item>\\n                            </md-list>\\n                        </div>\\n                        <app-type-form [type]=\\\"types[i]\\\" (typeChange)=\\\"typeChanged($event)\\\" *ngIf=\\\"type.editing\\\"></app-type-form>\\n                    </mat-card-content>\\n                </mat-card>\\n            </div>\\n            <div  fxFlex=\\\"100%\\\" fxFlex.gt-sm=\\\"50%\\\" style=\\\"padding: 10px;\\\" *ngFor=\\\"let type of nodeTypes; let i = index\\\">\\n                <mat-card>\\n                    <div class=\\\"content-card-header\\\" fxLayout=\\\"row\\\">\\n                        <mat-card-title fxFlex style=\\\"word-break: break-all;\\\">{{type.type}}</mat-card-title>\\n                        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"type.editing = true;\\\" mdTooltip=\\\"edit type\\\" aria-label=\\\"edit type\\\" *ngIf=\\\"!type.editing\\\" class=\\\"button-spacing\\\">\\n                            <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"removeType(i)\\\" mdTooltip=\\\"delete type\\\" aria-label=\\\"delete type\\\" class=\\\"button-spacing\\\">\\n                            <mat-icon>delete</mat-icon>\\n                        </button>\\n                    </div>\\n                    <mat-card-content>\\n                        <div *ngIf=\\\"!type.editing\\\">\\n                            <md-list dense>\\n                                <md-list-item>\\n                                    <h3 md-line><b>Class</b></h3>\\n                                    <p md-line>{{type.class}}</p>\\n                                </md-list-item>\\n                                <md-list-item class=\\\"autoheight-list\\\">\\n                                    <h3 md-line><b>Validators</b></h3>\\n                                    <p md-line *ngFor=\\\"let validator of type.validateFunctions\\\">{{validator.class}}</p>\\n                                    <p md-line *ngIf=\\\"!type.validateFunctions || type.validateFunctions.length === 0\\\">null</p>\\n                                </md-list-item>\\n                            </md-list>\\n                        </div>\\n                        <app-type-form [type]=\\\"nodeTypes[i]\\\" (typeChange)=\\\"nodeTypeChanged($event)\\\" *ngIf=\\\"type.editing\\\"></app-type-form>\\n                    </mat-card-content>\\n                </mat-card>\\n            </div>\\n        </div>\\n    </div>\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n</div>\\n\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ModuleWithProviders } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { graphRoutes } from './graph/graph.routes';\nimport { propertiesRoutes } from './properties/properties.routes';\nimport { schemaRoutes } from './schema/schema.routes';\nimport { typesRoutes } from './types/types.routes';\n\nexport const routes: Routes = [\n  {\n      path: '',\n      redirectTo: '/graph',\n      pathMatch: 'full'\n  },\n  ...graphRoutes,\n  ...propertiesRoutes,\n  ...schemaRoutes,\n  ...typesRoutes\n];\n\nexport const routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(routes);\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, AfterViewInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport * as _ from 'lodash';\n\nexport interface RouteLink {\n    title: string,\n    route: string\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n    activeLinkIndex: number;\n    pages: Array<RouteLink> = [\n        { title: 'Graph', route: 'graph' },\n        { title: 'Properties', route: 'properties' },\n        { title: 'Types', route: 'types' },\n        { title: 'Schema', route: 'schema' }\n    ];\n    rlaSafe = false;\n\n    public ngAfterViewInit() {\n        this.rlaSafe = true;\n    }\n\n    activateLink(index: number, linkIsActivated: boolean) {\n        this.activeLinkIndex = index;\n        console.log(linkIsActivated);\n    }\n\n    constructor(private router: Router, private route: ActivatedRoute) {\n    }\n}\n\n@Component({\n    selector: 'app-nav-link',\n    template: '{{_tabName}}'\n})\nexport class NavLinkComponent {\n    _tabName: string;\n    @Input()\n    set tabName(name: string) {\n        this._tabName = name;\n    }\n}\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { DataSet, Edge } from 'vis';\nimport { GraphQLType } from '../shared/graphql-type.interface';\nimport { GraphQLNode } from '../shared/graphql-node.interface';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'app-properties',\n    templateUrl: './properties.component.html',\n    styleUrls: ['./properties.component.css']\n})\nexport class PropertiesComponent implements OnInit {\n    edges: Array<Edge>;\n    nodes: Array<GraphQLNode>;\n    types: Array<GraphQLType>;\n\n    constructor(private storage: LocalStorageService) { }\n\n    ngOnInit() {\n        this.types = this.storage.retrieve('types');\n        const storedEdges = this.storage.retrieve('graphEdges');\n        if (storedEdges !== null) {\n            this.edges = [];\n            _.forEach(storedEdges._data, (edge: any, key) => {\n                edge.id = key;\n                this.edges.push(edge);\n            });\n        }\n        const storedNodes = this.storage.retrieve('graphNodes');\n        if (storedNodes !== null) {\n            this.nodes = [];\n            _.forEach(storedNodes._data, (node: any, key) => {\n                node.id = key;\n                this.nodes.push(node);\n            });\n        }\n    }\n\n    edgePropertiesChanged(event) {\n        const storedEdges = this.storage.retrieve('graphEdges');\n        _.forEach(storedEdges._data, (edge: any) => {\n            if (edge.id === event.value.id) {\n                edge.properties = event.value.properties;\n                edge.editing = false;\n            }\n        });\n        this.storage.store('graphEdges', storedEdges);\n    }\n\n    entityPropertiesChanged(event) {\n        const storedNodes = this.storage.retrieve('graphNodes');\n        _.forEach(storedNodes._data, (node: any) => {\n            _.forEach(node.entities, (entity: any) => {\n                if (entity.id === event.value.id) {\n                    entity.properties = event.value.properties;\n                    entity.editing = false;\n                }\n            });\n        });\n        this.storage.store('graphNodes', storedNodes);\n    }\n\n}\n","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n<div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n    <div fxFlex></div>\\n    <button md-raised-button color=\\\"accent\\\" (click)=\\\"addNewProperty();\\\" mdTooltip=\\\"add new property\\\" aria-label=\\\"add new property\\\"\\n        class=\\\"button-spacing\\\">\\n        Add Property\\n        </button>\\n</div>\\n    <div class=\\\"form-group\\\">\\n        <div style=\\\"margin-top: 20px;\\\">\\n            <div *ngIf=\\\"!_propertyHolder.properties || _propertyHolder.properties.length === 0\\\">\\n                <md-list dense>\\n                    <md-list-item>\\n                        <h3 md-line><b>No properties</b></h3>\\n                    </md-list-item>\\n                </md-list>\\n            </div>\\n            <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\" *ngFor=\\\"let property of _propertyHolder.properties\\\">\\n                <div class=\\\"input-field\\\" fxFlex>\\n                    <input mdInput class=\\\"full-width\\\" placeholder=\\\"Property name\\\" [(ngModel)]=\\\"property.name\\\">\\n                </div>\\n                <div class=\\\"input-field\\\" fxFlex>\\n                    <md-select id=\\\"{{property.id}}Type\\\" placeholder=\\\"Property Type\\\" [(ngModel)]=\\\"property.type\\\">\\n                        <md-option *ngFor=\\\"let type of _storedTypes\\\" [value]=\\\"type.type\\\">\\n                            {{ type.type}}\\n                        </md-option>\\n                    </md-select>\\n                </div>\\n                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"removeProperty(property.id)\\\" mdTooltip=\\\"delete property\\\" aria-label=\\\"delete property\\\" class=\\\"button-spacing\\\" style=\\\"margin-top: 15px;\\\">\\n                    <mat-icon>delete</mat-icon>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n            <div fxFlex></div>\\n            <button class=\\\"form-button button-spacing\\\" (click)=\\\"save()\\\" mdTooltip=\\\"update properties\\\" aria-label=\\\"update properties\\\" md-raised-button color=\\\"primary\\\">Update</button>\\n        </div>\\n    </div>\\n\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { GraphQLType } from '../shared/graphql-type.interface';\nimport { GafferService } from '../services/gaffer.service';\n\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'app-types',\n    templateUrl: './types.component.html',\n    styleUrls: ['./types.component.css'],\n    providers: [GafferService]\n})\nexport class TypesComponent implements OnInit {\n\n    types: Array<GraphQLType>;\n    nodeTypes: Array<any>;\n    errorMessage: any;\n\n    constructor(private storage: LocalStorageService, private gafferService: GafferService) { }\n\n    ngOnInit() {\n        const storedTypes = this.storage.retrieve('types');\n        if (storedTypes !== null) {\n            this.types = storedTypes;\n            this.getNodes();\n        } else {\n            this.resetTypes();\n        }\n    }\n\n    getNodes() {\n        const storedNodes = this.storage.retrieve('graphNodes');\n        if (storedNodes !== null) {\n            this.nodeTypes = [];\n            _.forEach(storedNodes._data, (node: any) => {\n                this.nodeTypes.push({\n                    type: node.label,\n                    class: node.class || 'java.lang.String',\n                    validateFunctions: node.validateFunctions || [],\n                    aggregateFunction: null,\n                    index: this.nodeTypes.length,\n                    node: true\n                });\n            });\n        }\n    }\n\n    resetTypes() {\n        this.gafferService.getCommonTypes()\n            .subscribe(\n            commonTypes => this.formatTypes(commonTypes.types),\n            error => this.errorMessage = <any>error);\n        this.getNodes();\n    }\n\n    removeType(index) {\n        this.types.splice(index, 1);\n        this.storage.store('types', this.types);\n    }\n\n    addNewType() {\n        this.types.push({\n            type: 'new type',\n            aggregateFunction: null,\n            serialiser: null,\n            class: '',\n            validateFunctions: null\n        });\n    }\n\n    formatTypes(commonTypes) {\n        this.types = [];\n        _.forEach(commonTypes, (type: any, key) => {\n            type.type = key;\n            type.index = this.types.length;\n            this.types.push(type);\n        });\n        this.storage.store('types', this.types);\n    }\n\n    typeChanged(event) {\n        const type = event.value;\n        this.types[type.index] = type;\n        this.types[type.index].editing = false;\n        this.storage.store('types', this.types);\n    }\n\n    nodeTypeChanged(event) {\n        const type = event.value;\n        const storedNodes = this.storage.retrieve('graphNodes');\n        if (storedNodes !== null) {\n            _.forEach(storedNodes._data, (node: any) => {\n                if (node.label === type.type) {\n                    node.class = type.class;\n                    node.validateFunctions = type.validateFunctions;\n                }\n            });\n        }\n        this.nodeTypes[type.index].editing = false;\n        this.storage.store('graphNodes', storedNodes);\n    }\n}\n","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n<mat-toolbar color=\\\"primary\\\">\\n    <img src=\\\"assets/gafferlogowhite.png\\\" width=\\\"30px\\\" style=\\\"margin-right: 15px;\\\" />\\n    <h1 style=\\\"font-size: 22pt; font-weight: 800;\\\">Gaffer Schema Builder</h1>\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\n</mat-toolbar>\\n<nav mat-tab-nav-bar>\\n    <a mat-tab-link\\n        *ngFor=\\\"let child of pages\\\"\\n        [routerLink]=\\\"child.route\\\"\\n        routerLinkActive #rla=\\\"routerLinkActive\\\"\\n        [active]=\\\"rlaSafe && rla.isActive\\\"> {{ child.title }}\\n    </a>\\n</nav>\\n\\n<router-outlet class=\\\"alt-background\\\"></router-outlet>\\n\";","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n<div class=\\\"form-group\\\">\\n    <div style=\\\"margin-bottom: 0;\\\">\\n        <div class=\\\"input-field\\\" *ngIf=\\\"!_type.node\\\">\\n            <input mdInput class=\\\"form-control full-width\\\" type=\\\"text\\\" name=\\\"type\\\" placeholder=\\\"Type name\\\" [(ngModel)]=\\\"_type.type\\\" (ngModelChange)=\\\"changeType($event, 'type')\\\">\\n        </div>\\n        <div class=\\\"input-field\\\">\\n            <input mdInput class=\\\"form-control full-width\\\" type=\\\"text\\\" name=\\\"class\\\" placeholder=\\\"Java class\\\" [(ngModel)]=\\\"_type.class\\\" (ngModelChange)=\\\"changeType($event, 'class')\\\">\\n        </div>\\n        <div class=\\\"input-field\\\" *ngIf=\\\"functions && functions.valid && !_type.node\\\">\\n            <md-select class=\\\"full-width\\\" id=\\\"serialiserClass\\\" placeholder=\\\"Serialiser class\\\" (change)=\\\"changeType(_type.serialiser, 'serialiser', 'class')\\\"\\n                [(ngModel)]=\\\"_type.serialiser\\\">\\n                <md-option value=\\\"NULL\\\">null</md-option>\\n                <md-option *ngFor=\\\"let serialiser of functions.serialiserClasses\\\" [value]=\\\"serialiser\\\">\\n                    {{ serialiser }}\\n                </md-option>\\n            </md-select>\\n        </div>\\n        <div class=\\\"input-field\\\" *ngIf=\\\"functions && functions.valid && !_type.node\\\">\\n            <md-select class=\\\"full-width\\\" id=\\\"aggregateFunction\\\" placeholder=\\\"Aggregator class\\\" (change)=\\\"changeType(_type.aggregateFunction, 'aggregateFunction', 'class')\\\"\\n                [(ngModel)]=\\\"_type.aggregateFunction\\\">\\n                <md-option value=\\\"NULL\\\">null</md-option>\\n                <md-option *ngFor=\\\"let aggregator of functions.aggregateClasses\\\" [value]=\\\"aggregator\\\">\\n                    {{ aggregator }}\\n                </md-option>\\n                </md-select>\\n        </div>\\n        <div class=\\\"input-field\\\" *ngIf=\\\"functions && functions.valid && !_type.node\\\">\\n            <input mdInput class=\\\"form-control full-width\\\" type=\\\"text\\\" [disabled]=\\\"aggregateFieldsDisabled\\\" name=\\\"aggregateFields\\\" placeholder=\\\"Aggregator fields\\\"\\n                [(ngModel)]=\\\"aggregateFields\\\" (ngModelChange)=\\\"changeType($event, 'aggregateFields')\\\">\\n            <p style=\\\"color: red; margin-top: -10px;\\\" *ngIf=\\\"!aggregateFieldsValid\\\">Invalid JSON</p>\\n        </div>\\n        <div *ngIf=\\\"functions && functions.valid\\\">\\n            <label>Validation</label>\\n            <div *ngFor=\\\"let validator of functions.validateClasses\\\" style=\\\"padding: 10px 0;\\\">\\n                <md-checkbox [checked]=\\\"checkValidation(validator)\\\" (change)=\\\"changeValidations($event.checked, validator)\\\">\\n                    {{validator}}\\n                </md-checkbox>\\n                <div *ngIf=\\\"checkValidation(validator)\\\" style=\\\"margin-left: 30px;\\\">\\n                        <input mdInput class=\\\"form-control full-width\\\" type=\\\"text\\\" name=\\\"validatorField_{{validator}}\\\" placeholder=\\\"Validator fields\\\" [(ngModel)]=\\\"validationFields[validator]\\\"\\n                            (change)=\\\"changeType($event, 'validationFields', validator)\\\">\\n                    <p style=\\\"color: red; margin-top: -10px;\\\" *ngIf=\\\"!validateFieldsValid\\\">Invalid JSON</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"functions !== undefined\\\">\\n            <p style=\\\"color: red\\\" *ngIf=\\\"functions && !functions.valid\\\">{{functions.message}}</p>\\n        </div>\\n        <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\">\\n            <div fxFlex></div>\\n            <button class=\\\"form-button\\\" (click)=\\\"save()\\\" mdTooltip=\\\"update type\\\" aria-label=\\\"update type\\\" md-raised-button color=\\\"primary\\\"\\n                [disabled]=\\\"functions && !functions.valid || !aggregateFieldsValid || !validateFieldsValid\\\">Update</button>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.type-tile {\\n    overflow: auto;\\n}\\n\\n.type-edit-button {\\n    position: absolute;\\n    top: 20px;\\n    right: 20px;\\n}\\n\\n.type-title-buttons {\\n    position: absolute;\\n    top: 25px;\\n    right: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0VBY0U7O0FBRUY7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsV0FBVztBQUNmOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxXQUFXO0FBQ2YiLCJmaWxlIjoidHlwZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAxNiBDcm93biBDb3B5cmlnaHRcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLmZvcm0tcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG59XG5cbi50eXBlLXRpbGUge1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4udHlwZS1lZGl0LWJ1dHRvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjBweDtcbiAgICByaWdodDogMjBweDtcbn1cblxuLnR5cGUtdGl0bGUtYnV0dG9ucyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjVweDtcbiAgICByaWdodDogMjVweDtcbn0iXX0= */\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Routes } from '@angular/router';\n\nimport { GraphComponent } from './graph.component';\n\nexport const graphRoutes: Routes = [\n  { path: 'graph', component: GraphComponent }\n];\n","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.input-field {\\n    margin-right: 30px;\\n}\\n\\n.form-button {\\n    margin: 20px;\\n    height: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkZ2UtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztFQWNFOztBQUVGO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCIiwiZmlsZSI6ImVkZ2UtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE2IENyb3duIENvcHlyaWdodFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4uZm9ybS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuLmlucHV0LWZpZWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG59XG5cbi5mb3JtLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIGhlaWdodDogMzVweDtcbn0iXX0= */\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatTabsModule } from '@angular/material/tabs'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatIconModule } from '@angular/material/icon'\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { GraphComponent } from './graph/graph.component';\nimport { EdgeFormComponent } from './graph/edge-form/edge-form.component';\nimport { NodeFormComponent } from './graph/node-form/node-form.component';\nimport { NgxWebstorageModule } from 'ngx-webstorage';\nimport { SchemaComponent } from './schema/schema.component';\nimport { TypesComponent } from './types/types.component';\nimport { PrettyJsonModule } from 'angular2-prettyjson';\nimport { AppComponent } from './app.component';\nimport { TypeFormComponent } from './types/type-form/type-form.component';\nimport { NavLinkComponent } from './app.component';\nimport { EntityFormComponent } from './graph/entity-form/entity-form.component';\nimport { PropertiesComponent } from './properties/properties.component';\nimport { PropertyFormComponent } from './properties/property-form/property-form.component';\nimport { routing } from './app.routes';\nimport { configFactory, ConfigLoader, ConfigModule } from '@ngx-config/core';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GraphComponent,\n    EdgeFormComponent,\n    NodeFormComponent,\n    SchemaComponent,\n    TypesComponent,\n    TypeFormComponent,\n    EntityFormComponent,\n    PropertiesComponent,\n    PropertyFormComponent,\n    NavLinkComponent\n  ],\n  imports: [\n    MatCardModule,\n    MatInputModule,\n    MatIconModule,\n    MatTabsModule,\n    MatToolbarModule,\n    HttpClientModule,\n    BrowserModule,\n    PrettyJsonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    NgxWebstorageModule.forRoot(),\n    BrowserAnimationsModule,\n    RouterModule,\n    routing,\n    ConfigModule.forRoot({\n      provide: ConfigLoader,\n      useFactory: (configFactory)\n    })\n  ],\n  entryComponents: [\n    AppComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  // constructor(private _appRef: ApplicationRef) { }\n\n  // ngDoBootstrap() {\n  //   this._appRef.bootstrap(AppComponent);\n  // }\n}\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter  } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { GafferService } from '../../services/gaffer.service';\nimport { UUID } from 'angular2-uuid';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'app-property-form',\n    templateUrl: './property-form.component.html',\n    styleUrls: ['./property-form.component.css'],\n    providers: [GafferService]\n})\nexport class PropertyFormComponent implements OnInit {\n    _propertyHolder: any;\n    _storedTypes: any;\n    nodeOptions: any;\n    errorMessage: any;\n\n    @Input()\n    set propertyHolder(propertyHolder: any) {\n        this._propertyHolder = propertyHolder;\n    }\n    get propertyHolder() {\n        return this._propertyHolder;\n    }\n\n    @Output() holderChange = new EventEmitter();\n\n    constructor(private storage: LocalStorageService, private gafferService: GafferService) { }\n\n    ngOnInit() {\n        const storedTypes = this.storage.retrieve('types');\n        if (storedTypes !== null) {\n            this._storedTypes = storedTypes;\n        } else {\n            this.resetTypes();\n        }\n    }\n\n    resetTypes() {\n        this.gafferService.getCommonTypes()\n            .subscribe(\n            commonTypes => this.formatTypes(commonTypes.types),\n            error => this.errorMessage = <any>error);\n    }\n\n    formatTypes(commonTypes) {\n        this._storedTypes = [];\n        _.forEach(commonTypes, (type: any, key) => {\n            type.type = key;\n            type.index = this._storedTypes.length;\n            this._storedTypes.push(type);\n        });\n        this.storage.store('types', this._storedTypes);\n    }\n\n    addNewProperty() {\n        const uuid = UUID.UUID();\n        if (!this._propertyHolder.properties) {\n            this._propertyHolder.properties = [];\n        }\n        this._propertyHolder.properties.push({\n            id: uuid,\n            name: 'New Property',\n            type: this._storedTypes[0].type || 'string'\n        });\n    }\n\n    removeProperty(propertyId) {\n        this._propertyHolder.properties = _.filter(this._propertyHolder.properties, (property: any) => {\n            return property.id !== propertyId;\n        });\n    }\n\n    save() {\n        this.holderChange.emit({\n            value: this.propertyHolder\n        });\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { FormBuilder } from '@angular/forms';\nimport { DataSet, Network } from 'vis';\nimport { GraphQLNode } from '../../shared/graphql-node.interface';\nimport { GraphQLEntity } from '../../shared/graphql-entity.interface';\nimport { GraphQLType } from '../../shared/graphql-type.interface';\nimport { UUID } from 'angular2-uuid';\nimport * as _ from 'lodash';\n\ndeclare const $: any;\n\n@Component({\n    selector: 'app-entity-form',\n    templateUrl: './entity-form.component.html',\n    styleUrls: ['./entity-form.component.css'],\n    providers: [FormBuilder]\n})\nexport class EntityFormComponent implements OnInit {\n    _node: GraphQLNode;\n    _nodes: DataSet<GraphQLNode>;\n    _storedTypes: Array<GraphQLType>;\n    entities: Array<GraphQLEntity>;\n    form: any;\n\n    @Input()\n    set nodes(nodes: any) {\n        this._nodes = nodes;\n    }\n    get nodes() { return this._nodes; }\n\n    @Input()\n    set selectedNode(selectedNode: string) {\n        this._node = this._nodes.get(selectedNode);\n        this.entities = this._node.entities || [];\n        this.updateForm(this.entities);\n    }\n\n    constructor(private storage: LocalStorageService, private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n        this._storedTypes = this.storage.retrieve('types');\n    }\n\n    updateForm(entities: any) {\n        const formObject = {};\n        _.forEach(entities, (entity: any) => {\n            formObject[entity.id] = entity.name;\n        });\n        this.form = this.formBuilder.group(formObject);\n        this.form.valueChanges\n            .debounceTime(400)\n            .distinctUntilChanged()\n            .subscribe((data) => this.save(data));\n    }\n\n    addNewEntity() {\n        const uuid = UUID.UUID();\n        this.entities.push({\n            id: uuid,\n            name: 'New Entity',\n            properties: []\n        });\n        this.updateForm(this.entities);\n        this.save(this.form._value);\n    }\n\n    removeEntity(entityId) {\n        this.entities = _.filter(this.entities, (entity: any) => {\n            return entity.id !== entityId;\n        });\n        this.updateForm(this.entities);\n        this.save(this.form._value);\n    }\n\n    save(data) {\n        _.forEach(this.entities, (entity: any) => {\n            entity.name = data[entity.id];\n        });\n        this._node.entities = this.entities;\n        this._nodes.update(this._node);\n        this.storage.store('graphNodes', this._nodes);\n    }\n}\n","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n<div style=\\\"padding: 15px;\\\" class=\\\"flex-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n    <div fxFlex>\\n        <div fxLayout=\\\"row\\\">\\n            <div fxFlex style=\\\"margin-top: 15px;\\\">\\n                <h5 style=\\\"color:green;\\\" *ngIf=\\\"validation && validation.valid\\\">\\n                    <mat-icon>check</mat-icon>\\n                    {{validation.message}}\\n                </h5>\\n                <h5 style=\\\"color:red;\\\" *ngIf=\\\"validation && !validation.valid\\\">\\n                    <mat-icon>close</mat-icon>\\n                    <span *ngIf=\\\"validation && validation.errors\\\">{{validation.errors}}</span>\\n                    <span *ngIf=\\\"!validation || validation.errors\\\">Unknown validation error</span>\\n                </h5>\\n                <h5 style=\\\"color:red;\\\" *ngIf=\\\"errorMessage\\\">\\n                    <mat-icon>close</mat-icon>\\n                    <span>{{errorMessage}}</span>\\n                </h5>\\n            </div>\\n            <div fxFlex>\\n                <div fxFlex fxLayout=\\\"row\\\">\\n                    <div fxFlex class=\\\"input-field\\\">\\n                        <input mdInput class=\\\"form-control full-width\\\" type=\\\"text\\\" name=\\\"class\\\" placeholder=\\\"Gaffer schema URL: <url>/rest/v1/graph/schema\\\" mdTooltip=\\\"Gaffer schema URL: <url>/rest/v1/graph/schema\\\" [(ngModel)]=\\\"schemaUrl\\\"\\n                            (ngModelChange)=\\\"schemaUrlChanged()\\\">\\n                    </div>\\n                    <button md-raised-button color=\\\"accent\\\" style=\\\"height: 40px; margin-top: 16px;\\\" (click)=\\\"loadFromUrl()\\\" mdTooltip=\\\"load schema from URL\\\"\\n                        aria-label=\\\"load schema from URL\\\" class=\\\"button-spacing\\\">\\n                        Load from URL\\n                        </button>\\n                        <button md-raised-button color=\\\"warn\\\" style=\\\"height: 40px; margin-top: 16px;\\\" (click)=\\\"clearSchema()\\\" mdTooltip=\\\"load schema from URL\\\"\\n                            aria-label=\\\"load schema from URL\\\" class=\\\"button-spacing\\\">\\n                            Clear schema\\n                            </button>\\n                </div>\\n                <p style=\\\"color:red; margin-top: 0;\\\" *ngIf=\\\"errorMessageURL\\\">{{errorMessageURL}}</p>\\n                <p style=\\\"color:green; margin-top: 0;\\\" *ngIf=\\\"successURL\\\">{{successURL}}</p>\\n            </div>\\n        </div>\\n        <mat-card style=\\\"margin-bottom: 20px;\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>Elements</mat-card-title>\\n                <div class=\\\"type-edit-button row\\\">\\n                    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"enableEditMode('elements')\\\" mdTooltip=\\\"edit elements\\\" aria-label=\\\"edit elements\\\"\\n                        *ngIf=\\\"!editing.elements\\\" class=\\\"button-spacing\\\">\\n                        <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <a class=\\\"download-button\\\" [href]=\\\"sanitize(elementsDownload)\\\" download=\\\"elements.json\\\" mdTooltip=\\\"save to file\\\" aria-label=\\\"save to file\\\" *ngIf=\\\"!editing.elements\\\"><i class=\\\"material-icons left\\\">file_download</i></a>\\n                </div>\\n            </div>\\n            <mat-card-content>\\n                <pre [hidden]=\\\"editing.elements\\\" [innerHtml]=\\\"elements | prettyjson:4\\\"></pre>\\n                <p style=\\\"color: red\\\" *ngIf=\\\"errors.elements\\\">{{errors.elements}}</p>\\n                    <textarea mdInput class=\\\"full-width\\\" id=\\\"elementsTextArea\\\" value=\\\"{{elements | json:4}}\\\" [hidden]=\\\"!editing.elements\\\"></textarea>\\n                <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" *ngIf=\\\"editing.elements\\\">\\n                    <div fxFlex></div>\\n                    <button class=\\\"form-button button-spacing\\\" (click)=\\\"updateElements(undefined)\\\" mdTooltip=\\\"update elements\\\" aria-label=\\\"update elements\\\"\\n                        md-raised-button color=\\\"primary\\\">Update</button>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n\\n        <mat-card style=\\\"margin-bottom: 20px;\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>Types</mat-card-title>\\n                <div class=\\\"type-edit-button row\\\">\\n                    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"enableEditMode('types')\\\" mdTooltip=\\\"edit types\\\" aria-label=\\\"edit types\\\"\\n                        *ngIf=\\\"!editing.types\\\" class=\\\"button-spacing\\\">\\n                        <mat-icon>edit</mat-icon>\\n                        </button>\\n                        <a class=\\\"download-button\\\" [href]=\\\"sanitize(typesDownload)\\\" download=\\\"types.json\\\" mdTooltip=\\\"save to file\\\" aria-label=\\\"save to file\\\" *ngIf=\\\"!editing.types\\\"><i class=\\\"material-icons left\\\">file_download</i></a>\\n                </div>\\n            </div>\\n            <mat-card-content>\\n                <pre [hidden]=\\\"editing.types\\\" [innerHtml]=\\\"types | prettyjson:4\\\"></pre>\\n                <p style=\\\"color: red\\\" *ngIf=\\\"errors.types\\\">{{errors.types}}</p>\\n                    <textarea mdInput class=\\\"full-width\\\" id=\\\"typesTextArea\\\" value=\\\"{{types | json:4}}\\\" [hidden]=\\\"!editing.types\\\"></textarea>\\n                <div class=\\\"flex-container\\\" fxLayout=\\\"row\\\" *ngIf=\\\"editing.types\\\">\\n                    <div fxFlex></div>\\n                    <button class=\\\"form-button button-spacing\\\" (click)=\\\"updateTypes(undefined)\\\" mdTooltip=\\\"update types\\\" aria-label=\\\"update types\\\"\\n                        md-raised-button color=\\\"primary\\\">Update</button>\\n                </div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex=\\\"10%\\\" fxShow=\\\"true\\\" fxShow.sm=\\\"false\\\" fxShow.xs=\\\"false\\\"></div>\\n</div>\\n\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { GraphQLType } from '../../shared/graphql-type.interface';\nimport { GafferService } from '../../services/gaffer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'app-type-form',\n    templateUrl: './type-form.component.html',\n    styleUrls: ['./type-form.component.css'],\n    providers: [GafferService]\n})\nexport class TypeFormComponent implements OnInit {\n    _type: GraphQLType;\n    aggregateFields: any;\n    aggregateFieldsValid: any;\n    aggregateFieldsDisabled: any;\n    validationFields: any;\n    validateFieldsValid: any;\n    functions: any;\n    errorMessage: string;\n\n    @Input()\n    set type(type: any) {\n        this._type = type;\n        if (!this._type.node && this._type.aggregateFunction !== null &&\n        this._type.aggregateFunction !== undefined && this._type.aggregateFunction !== null &&\n        this._type.aggregateFunction.class !== 'NULL'\n        && this._type.aggregateFunction !== {} ) {\n            this.aggregateFields = _.cloneDeep(this._type.aggregateFunction);\n            this.aggregateFields.class = undefined;\n            this.aggregateFieldsDisabled = false;\n            try {\n                this.aggregateFields = JSON.stringify(this.aggregateFields);\n                this.aggregateFieldsValid = true;\n            } catch (e) {\n                this.aggregateFieldsValid = false;\n            }\n        } else {\n            this.aggregateFields = '';\n            this.aggregateFieldsValid = true;\n            this.aggregateFieldsDisabled = true;\n        }\n        this.validationFields = {};\n        this.validateFieldsValid = true;\n        if (this._type.validateFunctions && this._type.validateFunctions.length > 0) {\n            const tempValidationFields = _.cloneDeep(this._type.validateFunctions);\n            _.forEach(tempValidationFields, (field: any) => {\n                const vFields = _.cloneDeep(field);\n                vFields.class = undefined;\n                this.validationFields[field.class] = JSON.stringify(vFields);\n            });\n        }\n        this.getGafferFunctions(type.type, type.class);\n    }\n    get type() {\n        return this._type;\n    }\n\n    @Output() typeChange = new EventEmitter();\n\n    constructor(private storage: LocalStorageService, private gafferService: GafferService) { }\n\n    ngOnInit() {\n\n    }\n\n    getGafferFunctions(type: string, javaClass: string) {\n        if (type !== undefined && javaClass !== undefined) {\n            this.gafferService.getSimpleFunctions(type, javaClass)\n                .subscribe(\n                functions => this.functions = functions,\n                error => this.errorMessage = <any>error);\n        } else {\n            this.functions = undefined;\n        }\n        if(!this._type.aggregateFunction) {\n            this._type.aggregateFunction = {};\n        }\n    }\n\n    changeValidations(checked: boolean, validator: any) {\n        if (checked) {\n            if (!this._type.validateFunctions) {\n                this._type.validateFunctions = [];\n            }\n            this._type.validateFunctions.push({\n                class: validator\n            });\n            if (this.validationFields[validator] === undefined || this.validationFields[validator].length === 0) {\n                this.validationFields[validator] = '{}';\n            } else {\n                this.changeType(this.validationFields[validator], 'validationFields', _.cloneDeep(validator));\n            }\n        } else {\n            for (let i = 0; i < this._type.validateFunctions.length; i++) {\n                if (this._type.validateFunctions[i].class === validator) {\n                    this._type.validateFunctions.splice(i, 1);\n                }\n            }\n        }\n    }\n\n    changeType(value: any, key: string, secondaryKey?: string) {\n        if (key === 'aggregateFields') {\n            if(this.aggregateFields && this._type.aggregateFunction !== null) {\n                try {\n                    const fieldsObject = JSON.parse(this.aggregateFields);\n                    fieldsObject.class = this._type.aggregateFunction.class;\n                    this._type.aggregateFunction = fieldsObject;\n                    this.aggregateFieldsValid = true;\n                } catch (e) {\n                    if (this._type.aggregateFunction !== null && this._type.aggregateFunction.class !== 'NULL') {\n                        this.aggregateFieldsValid = false;\n                    } else {\n                        this.aggregateFieldsValid = true;\n                    }\n                }\n            } else {\n                this.aggregateFieldsValid = true;\n            }\n        } else if (key === 'validationFields') {\n            try {\n                const fieldsObject = JSON.parse(this.validationFields[secondaryKey]);\n                fieldsObject.class = secondaryKey;\n                for (let i = 0; i < this._type.validateFunctions.length; i++) {\n                    if (this._type.validateFunctions[i].class === secondaryKey) {\n                        this._type.validateFunctions[i] = fieldsObject;\n                    }\n                }\n                this.validateFieldsValid = true;\n            } catch (e) {\n                if (this._type.validateFunctions && this._type.validateFunctions.length > 0) {\n                    this.validateFieldsValid = false;\n                } else {\n                    this.validateFieldsValid = true;\n                }\n            }\n        } else {\n            if (!secondaryKey) {\n                this._type[key] = value;\n            } else {\n                this._type[key] = {};\n                this._type[key][secondaryKey] = value;\n            }\n            if (key === 'type' || key === 'class') {\n                this.getGafferFunctions(this._type.type, this._type.class);\n            }\n            if (key === 'aggregateFunction' && value !== 'NULL') {\n                this.changeType(this.aggregateFields, 'aggregateFields', undefined);\n            }\n        }\n        if (this._type.aggregateFunction !== null && this._type.aggregateFunction.class !== 'NULL') {\n            this.aggregateFieldsDisabled = false;\n        } else {\n            this.aggregateFieldsDisabled = true;\n        }\n    }\n\n    checkValidation(validator) {\n        let result = false;\n        if (this._type.validateFunctions) {\n            this._type.validateFunctions.forEach(function (v) {\n                if (v.class === validator) {\n                    result = true;\n                }\n            });\n        }\n        return result;\n    }\n\n    save() {\n        this.typeChange.emit({\n            value: this._type\n        });\n    }\n}\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataSet, Network, Node, Edge, Options } from 'vis';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { forEach } from 'lodash'\n\nexport interface DataContainer {\n    nodes: DataSet<Node>,\n    edges: DataSet<Edge>\n}\n\n@Component({\n    selector: 'app-graph',\n    templateUrl: './graph.component.html',\n    styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements OnInit {\n    nodes: DataSet<Node>;\n    edges: DataSet<Edge>;\n    network: Network;\n    container: any;\n    data: DataContainer;\n    options: Options;\n    selectedNode: Observable<string>;\n    selectedEdge: Observable<string>;\n\n    constructor(private storage: LocalStorageService) { }\n\n    selectNode(params) {\n        this.selectedNode = params.nodes[0];\n    }\n\n    deselectNode() {\n        this.selectedNode = undefined;\n    }\n\n    selectEdge(params) {\n        this.selectedEdge = params.edges[0];\n    }\n\n    deselectEdge() {\n        this.selectedEdge = undefined;\n    }\n\n    saveNodes(data, callback) {\n        if (data.label === 'new') {\n            data.label = 'node ' + (this.nodes.get().length + 1);\n        }\n        callback(data);\n        this.storage.store('graphEdges', this.edges);\n        this.storage.store('graphNodes', this.nodes);\n    }\n\n    saveEdges(data, callback) {\n        if (data.to !== undefined) {\n            data.length = 200;\n            data.arrows = 'to';\n            if (data.label === undefined) {\n                data.label = 'edge ' + (this.edges.get().length + 1);\n            }\n        }\n        callback(data);\n        this.storage.store('graphEdges', this.edges);\n        this.storage.store('graphNodes', this.nodes);\n    }\n\n    ngOnInit() {\n        const storedNodes = this.storage.retrieve('graphNodes');\n        if (storedNodes !== null) {\n            const nodeArray = [];\n            forEach(storedNodes._data, (storedNode: any) => {\n                nodeArray.push(storedNode);\n            });\n            this.nodes = new DataSet(nodeArray);\n        } else {\n            this.nodes = new DataSet();\n        }\n        \n        const storedEdges = this.storage.retrieve('graphEdges');\n        if (storedEdges !== null) {\n            const edgeArray = [];\n            forEach(storedEdges._data, (storedEdge: any) => {\n                edgeArray.push(storedEdge);\n            });\n            this.edges = new DataSet(edgeArray);\n        } else {\n            this.edges = new DataSet();\n        }\n\n        this.container = document.getElementById('schema-graph');\n        this.data = {\n            nodes: this.nodes,\n            edges: this.edges\n        };\n        this.options = {\n            nodes: {\n                shape: 'dot',\n                size: 18,\n                font: {\n                    size: 16\n                },\n                borderWidth: 2,\n                shadow: true\n            },\n            edges: {\n                width: 2,\n                shadow: true\n            },\n            autoResize: true,\n            height: '600px',\n            manipulation: {\n                enabled: true,\n                initiallyActive: true,\n                addNode: (data, callback) => this.saveNodes(data, callback),\n                addEdge: (data, callback) => this.saveEdges(data, callback),\n                editEdge: (data, callback) => this.saveEdges(data, callback),\n                deleteNode: (data, callback) => this.saveNodes(data, callback),\n                deleteEdge: (data, callback) => this.saveEdges(data, callback),\n                controlNodeStyle: {}\n            }\n        };\n\n        this.network = new Network(this.container, this.data, this.options);\n        this.network.on('selectNode', params => this.selectNode(params));\n        this.network.on('selectEdge', params => this.selectEdge(params));\n        this.network.on('deselectNode', params => this.deselectNode());\n        this.network.on('deselectEdge', params => this.deselectEdge());\n    }\n\n}\n","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.properties-tile {\\n    overflow: auto;\\n}\\n\\n.properties-edit-button {\\n    position: absolute;\\n    top: 20px;\\n    right: 20px;\\n}\\n\\n.properties-title-buttons {\\n    position: absolute;\\n    top: 25px;\\n    right: 25px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3BlcnRpZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7RUFjRTs7QUFFRjtJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFdBQVc7QUFDZiIsImZpbGUiOiJwcm9wZXJ0aWVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTYgQ3Jvd24gQ29weXJpZ2h0XG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi5mb3JtLXJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xufVxuXG4ucHJvcGVydGllcy10aWxlIHtcbiAgICBvdmVyZmxvdzogYXV0bztcbn1cblxuLnByb3BlcnRpZXMtZWRpdC1idXR0b24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDIwcHg7XG4gICAgcmlnaHQ6IDIwcHg7XG59XG5cbi5wcm9wZXJ0aWVzLXRpdGxlLWJ1dHRvbnMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDI1cHg7XG4gICAgcmlnaHQ6IDI1cHg7XG59Il19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9wZXJ0eS1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"/*\\n * Copyright 2016 Crown Copyright\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.form-row {\\n    display: flex;\\n    flex-flow: row wrap;\\n}\\n\\n.input-field {\\n    margin-right: 30px;\\n}\\n\\n.form-button {\\n    margin: 20px;\\n    height: 35px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGUtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztFQWNFOztBQUVGO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCIiwiZmlsZSI6Im5vZGUtZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDE2IENyb3duIENvcHlyaWdodFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4uZm9ybS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcbn1cblxuLmlucHV0LWZpZWxkIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG59XG5cbi5mb3JtLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiAyMHB4O1xuICAgIGhlaWdodDogMzVweDtcbn0iXX0= */\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Routes } from '@angular/router';\n\nimport { TypesComponent } from './types.component';\n\nexport const typesRoutes: Routes = [\n  { path: 'types', component: TypesComponent }\n//   { path: 'explore/:id', component: ExploreComponent }\n];\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { DataSet, Network } from 'vis';\nimport { GraphQLNode } from '../../shared/graphql-node.interface';\nimport { FormBuilder } from '@angular/forms';\nimport * as _ from 'lodash';\ndeclare const $: any;\n\n@Component({\n    selector: 'app-node-form',\n    templateUrl: './node-form.component.html',\n    styleUrls: ['./node-form.component.css'],\n    providers: [FormBuilder]\n})\nexport class NodeFormComponent implements OnInit {\n    _node: any;\n    _nodes: DataSet<GraphQLNode>;\n    _network: Network;\n    form: any;\n\n    @Input()\n    set nodes(nodes: any) {\n        this._nodes = nodes;\n    }\n    get nodes() { return this._nodes; }\n\n    @Input()\n    set selectedNode(selectedNode: any) {\n        this._node = this._nodes.get(selectedNode);\n        this.updateForm(this._node);\n    }\n\n    @Input()\n    set network(network: any) {\n        this._network = network;\n    }\n\n    constructor(private storage: LocalStorageService, private formBuilder: FormBuilder) {}\n\n    ngOnInit() {\n        this.form.valueChanges\n            .debounceTime(400)\n            .distinctUntilChanged()\n            .subscribe((data) => this.save(data));\n    }\n\n    updateForm(node: any) {\n        this.form = this.formBuilder.group({\n            label: node.label\n        });\n    }\n\n    save(data) {\n        this._node = _.merge(this._node, data);\n        this._nodes.update(this._node);\n        this.storage.store('graphNodes', this._nodes);\n    }\n}\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Routes } from '@angular/router';\n\nimport { PropertiesComponent } from './properties.component';\n\nexport const propertiesRoutes: Routes = [\n  { path: 'properties', component: PropertiesComponent }\n];\n","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n\\n<form [formGroup]=\\\"form\\\" style=\\\"padding-top: 10px;\\\">\\n    <div class=\\\"form-group\\\">\\n        <div class=\\\"input-field\\\">\\n            <input mdInput class=\\\"full-width\\\" placeholder=\\\"Node name\\\" formControlName=\\\"label\\\" name=\\\"label\\\">\\n        </div>\\n    </div>\\n</form>\\n\";","export default \"<!--\\n  ~ Copyright 2016-2019 Crown Copyright\\n  ~\\n  ~ Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n  ~ you may not use this file except in compliance with the License.\\n  ~ You may obtain a copy of the License at\\n  ~\\n  ~     http://www.apache.org/licenses/LICENSE-2.0\\n  ~\\n  ~ Unless required by applicable law or agreed to in writing, software\\n  ~ distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n  ~ See the License for the specific language governing permissions and\\n  ~ limitations under the License.\\n  -->\\n<div class=\\\"flex-container alt-background\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"wrap\\\">\\n    <div fxFlex=\\\"100%\\\" fxFlex.gt-md=\\\"70%\\\" style=\\\"padding: 10px;\\\">\\n        <mat-card style=\\\"padding: 0;\\\">\\n            <mat-card-content>\\n                <div id=\\\"schema-graph\\\"></div>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n    <div fxFlex=\\\"100%\\\" fxFlex.gt-md=\\\"30%\\\" style=\\\"padding: 10px;\\\">\\n        <mat-card style=\\\"margin: 70px 0 20px 0; overflow: auto\\\" *ngIf=\\\"selectedEdge && !selectedNode\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>Selected Edge</mat-card-title>\\n            </div>\\n            <mat-card-content>\\n                <app-edge-form [selectedEdge]=\\\"selectedEdge\\\" [edges]=\\\"edges\\\" [nodes]=\\\"nodes\\\" [network]=\\\"network\\\"></app-edge-form>\\n            </mat-card-content>\\n        </mat-card>\\n\\n        <mat-card style=\\\"margin: 70px 0 20px 0; overflow: auto\\\" *ngIf=\\\"selectedNode\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>Selected Node</mat-card-title>\\n            </div>\\n            <mat-card-content>\\n                <app-node-form [selectedNode]=\\\"selectedNode\\\" [nodes]=\\\"nodes\\\" [network]=\\\"network\\\"></app-node-form>\\n            </mat-card-content>\\n        </mat-card>\\n\\n        <mat-card style=\\\"margin: 20px 0 20px 0; overflow-y: auto\\\" *ngIf=\\\"selectedNode\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>Node Entities</mat-card-title>\\n            </div>\\n            <mat-card-content>\\n                <app-entity-form [selectedNode]=\\\"selectedNode\\\" [nodes]=\\\"nodes\\\"></app-entity-form>\\n            </mat-card-content>\\n        </mat-card>\\n\\n        <mat-card style=\\\"margin: 70px 0 20px 0; overflow: auto\\\" *ngIf=\\\"!selectedNode && !selectedEdge\\\">\\n            <div class=\\\"content-card-header\\\">\\n                <mat-card-title>None Selected</mat-card-title>\\n            </div>\\n            <mat-card-content>\\n                <p>Select a node or edge from the graph.</p>\\n            </mat-card-content>\\n        </mat-card>\\n    </div>\\n</div>\\n\";","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","/*\n * Copyright 2016 Crown Copyright\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { GafferService } from '../services/gaffer.service';\nimport { UUID } from 'angular2-uuid';\nimport * as _ from 'lodash';\nimport { DataSet } from 'vis';\nimport * as $ from 'jquery'\n\n@Component({\n    selector: 'app-schema',\n    templateUrl: './schema.component.html',\n    styleUrls: ['./schema.component.css'],\n    providers: [GafferService]\n})\nexport class SchemaComponent implements OnInit {\n    schema: any;\n    elements: any;\n    types: any;\n    functions: any;\n    commonTypes: any;\n    validation: any;\n\n    errorMessage: string;\n    errorMessageURL: string;\n    successURL: string;\n\n    edgesById: any;\n    edgesByName: any;\n    nodesById: any;\n    nodesByName: any;\n\n    schemaUrl: string;\n\n    errors: any;\n    editing: any;\n\n    elementsDownload: any;\n    typesDownload: any;\n\n    parseElements() {\n        this.elements = {\n            edges: {},\n            entities: {}\n        };\n        if (this.schema.hasOwnProperty('edges')) {\n            _.forEach(this.schema.edges._data, (edge: any) => {\n                let directed = 'true';\n                if (edge.arrows !== 'to') {\n                    directed = 'false';\n                }\n                const formattedEdge = {\n                    source: this.nodesById[edge.from],\n                    destination: this.nodesById[edge.to],\n                    directed: directed,\n                    properties: {}\n                };\n                _.forEach(edge.properties, (property: any) => {\n                    formattedEdge.properties[property.name] = property.type;\n                });\n                this.elements.edges[edge.label] = formattedEdge;\n            });\n        }\n        if (this.schema.hasOwnProperty('nodes')) {\n            _.forEach(this.schema.nodes._data, (node: any) => {\n                _.forEach(node.entities, (entity: any) => {\n                    const formattedEntity = {\n                        vertex: node.label,\n                        properties: {}\n                    };\n                    _.forEach(entity.properties, (property: any) => {\n                        formattedEntity.properties[property.name] = property.type;\n                    });\n                    this.elements.entities[entity.name] = formattedEntity;\n                });\n            });\n        }\n        this.elementsDownload = 'data:text/json;charset=utf-8,' +\n            encodeURIComponent(JSON.stringify(this.elements, null, 2));\n    }\n\n    parseTypes() {\n        this.types = {\n            types: {}\n        };\n        if (this.schema.hasOwnProperty('types')) {\n            _.forEach(this.schema.types, (type: any) => {\n                const formattedType = {\n                    class: type.class || 'java.lang.String',\n                    validateFunctions: type.validateFunctions || undefined,\n                    aggregateFunction: type.aggregateFunction || null,\n                    serialiser: type.serialiser || null\n                };\n                if(formattedType.aggregateFunction && Object.keys(formattedType.aggregateFunction).length === 0) {\n                    formattedType.aggregateFunction = null;\n                }\n                this.types.types[type.type] = formattedType;\n            });\n        }\n        if (this.schema.hasOwnProperty('nodes')) {\n            _.forEach(this.schema.nodes._data, (node: any) => {\n                const formattedNode = {\n                    class: node.class || 'java.lang.String',\n                    validateFunctions: node.validateFunctions || undefined\n                };\n                this.types.types[node.label] = formattedNode;\n            });\n        }\n\n        this.typesDownload = 'data:text/json;charset=utf-8,' +\n            encodeURIComponent(JSON.stringify(this.types, null, 2));\n    }\n\n    sanitize(url: string) {\n        return this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    clearSchema() {\n        this.storage.clear();\n        this.ngOnInit();\n        this.elements = undefined;\n        this.types = undefined;\n    }\n\n    enableEditMode(key: string) {\n        this.editing[key] = true;\n        $('#' + key + 'TextArea').trigger('input');\n    }\n\n    updateElements(input) {\n        let editedText;\n        if (input) {\n            editedText = input;\n        } else {\n            try {\n                editedText = JSON.parse($('#elementsTextArea').val().toString());\n            } catch (e) {\n                editedText = undefined;\n                this.errors.elements = 'Failed to parse JSON: ' + e.message;\n            }\n        }\n        if (editedText) {\n            const edges = new DataSet();\n            const nodes = new DataSet();\n            const newNodes = [];\n            const newEdges = [];\n            this.errors.elements = undefined;\n            if (editedText.edges) {\n                _.forEach(editedText.edges, (editedEdge: any, edgeName) => {\n                    let fromId;\n                    let toId;\n                    if (!_.some(newNodes, { label: editedEdge.source })) {\n                        fromId = UUID.UUID();\n                        newNodes.push({\n                            id: fromId,\n                            entities: [],\n                            label: editedEdge.source\n                        });\n                    } else {\n                        fromId = _.find(newNodes, { label: editedEdge.source }).id;\n                    }\n                    if (!_.some(newNodes, { label: editedEdge.destination })) {\n                        toId = UUID.UUID();\n                        newNodes.push({\n                            id: toId,\n                            entities: [],\n                            label: editedEdge.destination\n                        });\n                    } else {\n                        toId = _.find(newNodes, { label: editedEdge.destination }).id;\n                    }\n                    const props = [];\n                    _.forEach(editedEdge.properties, (value: string, name) => {\n                        props.push({\n                            id: UUID.UUID(),\n                            name: name,\n                            type: value\n                        });\n                    });\n                    newEdges.push({\n                        id: UUID.UUID(),\n                        from: fromId,\n                        label: edgeName,\n                        properties: props,\n                        length: 200,\n                        arrows: 'to',\n                        to: toId\n                    });\n                });\n            }\n            if (editedText.entities) {\n                _.forEach(editedText.entities, (editedEntity: any, entityName) => {\n                    let nodeId;\n                    const props = [];\n                    _.forEach(editedEntity.properties, (value: string, name) => {\n                        props.push({\n                            id: UUID.UUID(),\n                            name: name,\n                            type: value\n                        });\n                    });\n                    if (!_.some(newNodes, { label: editedEntity.vertex })) {\n                        nodeId = UUID.UUID();\n                        const newNode = {\n                            id: nodeId,\n                            entities: [],\n                            label: editedEntity.vertex\n                        };\n                        newNode.entities.push({\n                            id: UUID.UUID(),\n                            name: entityName,\n                            properties: props\n                        });\n                        newNodes.push(newNode);\n                    } else {\n                        _.forEach(newNodes, (node: any) => {\n                            if (node.label === editedEntity.vertex) {\n                                node.entities.push({\n                                    id: UUID.UUID(),\n                                    name: entityName,\n                                    properties: props\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n            nodes.add(newNodes);\n            edges.add(newEdges);\n            this.storage.store('graphNodes', nodes);\n            this.storage.store('graphEdges', edges);\n            this.editing.elements = false;\n            this.ngOnInit();\n        }\n    }\n\n    updateTypes(input) {\n        let editedText;\n        if (input) {\n            editedText = input;\n        } else {\n            try {\n                editedText = JSON.parse($('#typesTextArea').val().toString());\n            } catch (e) {\n                editedText = undefined;\n                this.errors.types = 'Failed to parse JSON: ' + e.message;\n            }\n        }\n        if (editedText) {\n            const storedNodes = this.storage.retrieve('graphNodes');\n            const newTypes = [];\n            if (editedText.types) {\n                _.forEach(editedText.types, (editedType: any, typeName) => {\n                    let found = false;\n                    _.forEach(storedNodes._data, (storedNode: any, storedId) => {\n                        if (storedNode.label === typeName) {\n                            storedNode.class = editedType.class;\n                            storedNode.validateFunctions = editedText.validateFunctions;\n                            found = true;\n                        }\n                    });\n                    if (!found) {\n                        newTypes.push({\n                            class: editedType.class,\n                            type: typeName,\n                            validateFunctions: editedType.validateFunctions\n                        });\n                    }\n                });\n                this.storage.store('graphNodes', storedNodes);\n                this.storage.store('types', newTypes);\n                this.editing.types = false;\n            }\n        }\n    }\n\n    setupNodeLookups() {\n        const nodesById = {};\n        const storedNodes = this.storage.retrieve('graphNodes');\n        if (storedNodes) {\n            _.forEach(storedNodes._data, (storedNode: any, storedId) => {\n                nodesById[storedId] = storedNode.label;\n            });\n        }\n        this.nodesById = nodesById;\n    }\n\n    loadFromUrl() {\n        this.successURL = undefined;\n        this.gafferService.getSchemaFromURL(this.schemaUrl)\n            .subscribe(\n                result => this.formatSchemaResult(result),\n                error => this.errorMessageURL = <any>error);\n    }\n\n    schemaUrlChanged() {\n        if (this.schemaUrl.length === 0) {\n            this.storage.clear('schemaURL');\n            this.router.navigate(['/schema']);\n        }\n    }\n\n    formatSchemaResult(result) {\n        this.errorMessageURL = undefined;\n        this.errorMessage = undefined;\n        this.router.navigate(['/schema', { url: this.schemaUrl }]);\n        if (result.hasOwnProperty('types') && result.hasOwnProperty('edges')) {\n            this.updateElements(result);\n            this.updateTypes(result);\n        }\n        this.successURL = 'Successfully loaded schema from URL';\n    }\n\n    constructor(private storage: LocalStorageService, private gafferService: GafferService,\n                private router: Router, private route: ActivatedRoute, private sanitizer: DomSanitizer) { }\n\n    ngOnInit() {\n        const storedNodes = this.storage.retrieve('graphNodes');\n        const storedEdges = this.storage.retrieve('graphEdges');\n        const storedTypes = this.storage.retrieve('types');\n        this.schema = {\n            nodes: storedNodes,\n            edges: storedEdges,\n            types: storedTypes\n        };\n        this.errors = {\n            elements: undefined,\n            types: undefined,\n        };\n        this.editing = {\n            elements: false,\n            types: false\n        };\n        this.schemaUrl = '';\n        this.route.params.subscribe((routeParams: any) => {\n            if (routeParams.hasOwnProperty('url')) {\n                this.schemaUrl = routeParams.url;\n                this.storage.store('schemaURL', routeParams.url);\n            } else {\n                const storedSchemaUrl = this.storage.retrieve('schemaURL');\n                if (storedSchemaUrl && storedSchemaUrl !== null) {\n                    this.schemaUrl = this.storage.retrieve('schemaURL');\n                    this.router.navigate(['/schema', { url: this.schemaUrl }]);\n                }\n            }\n        });\n        this.setupNodeLookups();\n        $('textarea').each(function () {\n            this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');\n        }).on('input', function () {\n            setTimeout(() => {\n                this.style.height = (this.scrollHeight) + 'px';\n            }, 100);\n        });\n        if (storedEdges !== null && storedNodes !== null) {\n            this.parseElements();\n            this.parseTypes();\n            this.validation = undefined;\n            this.errorMessage = undefined;\n            this.gafferService.validateSchema(this.elements, this.types)\n                .subscribe(\n                validation => this.validation = validation,\n                error => this.errorMessage = <any>error);\n        }\n    }\n}\n"]}